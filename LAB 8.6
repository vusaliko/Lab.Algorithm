using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Diagnostics;


namespace Лабораторная_7._6
{
    class Program
    {
        static void Main(string[] args)
        {
            int i;
            Random r = new Random();
            Stopwatch vrema = new Stopwatch();
            double[] puzirv = new double[5], viborv = new double[5], vstavkav = new double[5], gnomv = new double[5], bistrv = new double[5];
            double[] a1 = new double[1000], a2 = new double[1500], a3 = new double[2000], a4 = new double[5000], a5 = new double[10000];
            for (i = 0; i < 1000; i++) a1[i] = r.Next();
            for (i = 0; i < 1500; i++) a2[i] = r.Next();
            for (i = 0; i < 2000; i++) a3[i] = r.Next();
            for (i = 0; i < 5000; i++) a4[i] = r.Next();
            for (i = 0; i < 10000; i++) a5[i] = r.Next();

            vrema.Start();
            Bubble(a1);
            vrema.Stop();
            puzirv[0] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            Console.WriteLine("Пузырек завершено!");
            vrema.Start();
            Bubble(a2);
            vrema.Stop();
            puzirv[1] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            Console.WriteLine("Пузырек завершено!");
            vrema.Start();
            Bubble(a3);
            vrema.Stop();
            puzirv[2] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            Console.WriteLine("Пузырек завершено!");
            vrema.Start();
            Bubble(a4);
            vrema.Stop();
            puzirv[3] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            Console.WriteLine("Пузырек завершено!");
            vrema.Start();
            Bubble(a5);
            vrema.Stop();
            puzirv[4] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            Console.WriteLine("Пузырек завершено!");
            vrema.Start();
            Select(a1);
            vrema.Stop();
            viborv[0] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Select(a2);
            vrema.Stop();
            viborv[1] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Select(a3);
            vrema.Stop();
            viborv[2] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Select(a4);
            vrema.Stop();
            viborv[3] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Select(a5);
            vrema.Stop();
            viborv[4] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            Console.WriteLine("Выбор завершено!");
            vrema.Start();
            Insert(a1);
            vrema.Stop();
            vstavkav[0] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Insert(a2);
            vrema.Stop();
            vstavkav[1] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Insert(a3);
            vrema.Stop();
            vstavkav[2] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Insert(a4);
            vrema.Stop();
            vstavkav[3] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Insert(a5);
            vrema.Stop();
            vstavkav[4] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            Console.WriteLine("Вставка завершено!");
            vrema.Start();
            Gnom(a1);
            vrema.Stop();
            gnomv[0] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Gnom(a2);
            vrema.Stop();
            gnomv[1] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Gnom(a3);
            vrema.Stop();
            gnomv[2] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Gnom(a4);
            vrema.Stop();
            gnomv[3] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Gnom(a5);
            vrema.Stop();
            gnomv[4] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            Console.WriteLine("Гном завершено!");
            vrema.Start();
            Quick(a1, 0, 999);
            vrema.Stop();
            bistrv[0] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Quick(a2, 0, 1499);
            vrema.Stop();
            bistrv[1] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Quick(a3, 0, 1999);
            vrema.Stop();
            bistrv[2] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Quick(a4, 0, 4999);
            vrema.Stop();
            bistrv[3] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            vrema.Start();
            Quick(a5, 0, 9999);
            vrema.Stop();
            bistrv[4] = (vrema.Elapsed.TotalMilliseconds);
            vrema.Reset();
            Console.WriteLine("Быстрая завершена!");
            Console.WriteLine("Пызурьком 1000: {0}мс   1500: {1}мс   2000: {2}мс   5000: {3}мс   10000: {4}мс", puzirv[0], puzirv[1], puzirv[2], puzirv[3], puzirv[4]);
            Console.WriteLine("Выбором   1000: {0}мс   1500: {1}мс   2000: {2}мс   5000: {3}мс   10000: {4}мс", viborv[0], viborv[1], viborv[2], viborv[3], viborv[4]);
            Console.WriteLine("Вставками 1000: {0}мс   1500: {1}мс   2000: {2}мс   5000: {3}мс   10000: {4}мс", vstavkav[0], vstavkav[1], vstavkav[2], vstavkav[3], vstavkav[4]);
            Console.WriteLine("Гномья    1000: {0}мс   1500: {1}мс   2000: {2}мс   5000: {3}мс   10000: {4}мс", gnomv[0], gnomv[1], gnomv[2], gnomv[3], gnomv[4]);
            Console.WriteLine("Быстрая   1000: {0}мс   1500: {1}мс   2000: {2}мс   5000: {3}мс   10000: {4}мс",bistrv[0],bistrv[1],bistrv[2],bistrv[3],bistrv[4]);
            Console.ReadKey();
        }
        static void Bubble(double[] mas)
        {
            double temp;
            for (int i = 0; i < mas.Length - 1; i++)
            {
                bool f = false;
                for (int j = i + 1; j < mas.Length - i - 1; j++)
                {
                    if (mas[i] > mas[j])
                    {
                        f = true;
                        temp = mas[i];
                        mas[i] = mas[j];
                        mas[j] = temp;
                    }
                }
                if (!f) break;
            }
        }  //Пузырек
        static void Quick(double[] arr, int first, int last)
        {
            double p = arr[(last - first) / 2 + first];
            double temp;
            int i = first, j = last;
            while (i <= j)
            {
                while (arr[i] < p && i <= last) ++i;
                while (arr[j] > p && j >= first) --j;
                if (i <= j)
                {
                    temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                    ++i; --j;
                }
            }
            if (j > first) Quick(arr, first, j);
            if (i < last) Quick(arr, i, last);
        }  //Быстрая
        static void Select(double[] arr)
        {
            int min;
            double temp;
            double length = arr.Length;

            for (int i = 0; i < length - 1; i++)
            {
                min = i;
                for (int j = i + 1; j < length; j++)
                {
                    if (arr[j] < arr[min])
                    {
                        min = j;
                    }
                }
                if (min != i)
                {
                    temp = arr[i];
                    arr[i] = arr[min];
                    arr[min] = temp;
                }
            }
        } //Выбором
        static void Insert(double[] array)
        {
            for (int i = 1; i < array.Length; i++)
            {
                double cur = array[i];
                int j = i;
                while (j > 0 && cur < array[j - 1])
                {
                    array[j] = array[j - 1];
                    j--;
                }
                array[j] = cur;
            }
        } //Вставками
        static void Gnom(double[] mas)
        {
            int i = 1;
            double tmp;
            while (i < mas.Length)
            {
                if (i == 0 || mas[i - 1] <= mas[i]) i++;
                else
                {
                    tmp = mas[i]; mas[i] = mas[i - 1]; mas[i - 1] = tmp;
                    i--;
                }
            }
        } //Гномья
    }
}
